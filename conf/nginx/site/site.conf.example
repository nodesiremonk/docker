server {
        listen 80;
        server_name domain.tld;
        root /var/www/domain.tld/public;
        index index.html index.php;
        client_max_body_size 32m;
        access_log  /var/log/nginx/domain.tld.access.log;
        error_log  /var/log/nginx/domain.tld.error.log;
        #error_page 404 /error/404/index.html;

        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        #=========== Https start ===========
        #listen 443 ssl;  # ssl only
        #listen 443 ssl spdy;  # ssl with spdy
        #listen 443 ssl http2; # ssl with http2, supported by v1.9.5
        # use following 2 lines instead of the one above for http2 starting form v1.25.1
        #listen 443 ssl;
        #http2 on;
        #ssl_certificate /etc/letsencrypt/live/domain.tld/fullchain.pem;
        #ssl_certificate_key /etc/letsencrypt/live/domain.tld/privkey.pem;

        #ssl_session_cache shared:SSL:20m;
        #ssl_session_timeout 60m;
        #ssl_prefer_server_ciphers on;
        #ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        # Need to create DH parameters file by: openssl dhparam 2048 -out /etc/nginx/cert/dhparam.pem
        #ssl_dhparam /etc/nginx/cert/dhparam.pem;
        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        # Enable OCSP stapling, need to generate .crt first
        #ssl_stapling on;
        #ssl_stapling_verify on;
        #ssl_trusted_certificate /etc/nginx/cert/trustchain.crt;
        #resolver 8.8.8.8 8.8.4.4;

        # enable STS
        #add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        #add_header Strict-Transport-Security "max-age=31536000" always;

        #=========== Https End ===========

        # Directives to send expires headers and turn off 404 error logging.
        location ~* \.(js|css|png|jpg|jpeg|gif|svg|mp3|mp4|ico)$ {
                expires max;
                log_not_found off;
                access_log off;

                # prevent hotlink
                # valid_referers none blocked ~.google. ~.bing. ~.yahoo. server_names ~($host);
                # if ($invalid_referer) {
                #    rewrite (.*) /static/images/hotlink-denied.jpg redirect;
                #    # or use "return 403;" if don't want to redirect
                #    # drop the 'redirect' flag for redirect without URL change (internal rewrite)
                #    # need to add another line for: location = /static/images/hotlink-denied.jpg { }
                #}

        }
        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }
        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }
        ## Disable viewing .htaccess & .htpassword
        location ~ /\.ht {
                deny  all;
        }

        ## To allow Let's Encrypt to access the temporary file
        location /.well-known/acme-challenge {
                root /var/www/letsencrypt;
        }
        include /etc/nginx/php.conf;
}
# redirect www to non-www
#server {
#        server_name www.domain.tld;
#        return 301 $scheme://domain.tld$request_uri;
#}
# force https. need to remove listen 80 and just leave listen 443 and ssl config there
#server {
#       listen         80;
#       server_name    domain.tld;
#       return         301 https://domain.tld$request_uri;
#}
